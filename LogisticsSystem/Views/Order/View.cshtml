@using Logistic.Base.Enums

@model Logistic.Base.Entity.PM_Order
@{
    ViewBag.Title = "Supplier View";
    Layout = "~/Views/Shared/_MasterLayout.cshtml";
    Logistic.Base.DataContext.LogisticsConnection db = new Logistic.Base.DataContext.LogisticsConnection();
    int id = Convert.ToInt32(ViewBag.PID);
    var item = db.tblStock.Where(x => x.PMOrderId == id).ToList();
    var usertype = db.Users.Where(x => x.Email == User.Identity.Name).Select(x => x.UserType).FirstOrDefault();
}

<body class="page-header-fixed page-quick-sidebar-over-content ">
    <div class="page-content-wrapper" style="min-height: 706px; margin-top: 60px;">
        <div class="page-content">
            <h3 class="page-title">Orders <small>orders listing</small>
            </h3>
            <div class="row">
                <div class="col-md-12 ">
                    <!-- BEGIN SAMPLE FORM PORTLET-->
                    <div class="portlet box blue">
                        <div class="portlet-title">
                            <div class="caption">
                                <i class="fa fa-gift"></i>View PO
                            </div>

                        </div>
                        <div class="portlet-body form">
                            <div role="form">
                                <div class="form-body">
                                    @using (Html.BeginForm("View", "Order", FormMethod.Post, new { enctype = "multipart/form-data" }))
                                    {                     
                                        @Html.AntiForgeryToken()
                                        @Html.ValidationSummary(true)
                                        @Html.HiddenFor(m => m.CreatedDate)
                                        @Html.HiddenFor(m=>m.ReqUID)
                                        @Html.HiddenFor(m=>m.SupplierID)
                                        @Html.HiddenFor(m=>m.Consolidator)
                                        @Html.HiddenFor(m=>m.EndUserId)
                                        @Html.HiddenFor(m=>m.OrgUID)
                                        <div>
                                            <label>MSD PO No.</label>
                                            @Html.TextBoxFor(m => m.MSD_PO, null, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                        <div>
                                            <label>ORA PO No.</label>
                                            @Html.TextBoxFor(m => m.ORAPoNumber, null, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                        <div>
                                            <label>Requisitioner:</label>
                                            @if (ViewBag.requser != null)
                                            {
                                                @Html.DropDownListFor(m => m.ReqUID, ViewBag.requser as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control",id="Requisitioner",@disabled = "disabled" })
                                                   
                                            }

                                        </div>

                                        <div>
                                            <label>End User:</label>
                                            @if (ViewBag.EndUser != null)
                                            {
                                                @Html.DropDownListFor(m => m.EndUserId, ViewBag.EndUser as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", id = "EndUser",@disabled = "disabled" })
                                               
                                            }

                                        </div>
                                        <div>
                                            <label>Originator:</label>
                                            @if (ViewBag.Originator != null)
                                            {
                                                @Html.DropDownListFor(m => m.OrgUID, ViewBag.Originator as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control", id = "Originator",@disabled = "disabled" })
                                               
                                            }

                                        </div>
                                        <div>
                                            <label>Consolidator:</label>
                                            @if (ViewBag.consol != null)
                                            {
                                                @Html.DropDownListFor(m => m.Consolidator, ViewBag.consol as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control",@disabled = "disabled" })
                                                @Html.ValidationMessageFor(m => m.Consolidator, null, new { style = "color: red" })
                                            }

                                        </div>
                                        <div>
                                            <label>Supplier:</label>
                                            @if (ViewBag.supplier != null)
                                            {
                                                @Html.DropDownListFor(m => m.SupplierID, ViewBag.supplier as IEnumerable<SelectListItem>, "--Select--", new { @class = "form-control",@disabled = "disabled" })                       
                                            }


                                        </div>
                                        <div>
                                            <label>Pdf File</label>
                                            @Html.TextBoxFor(m => m.pdffile, new { @class = "form-control", id = "pdffile", @readonly = "readonly" })

                                        </div>
                                        <div>
                                            <label>Approval Time:</label>
                                            @Html.TextBoxFor(m => m.ApprovalTime, new { @class = "form-control", id = "MOT", @readonly = "readonly" })

                                        </div>
     
                                        <div>
                                            <label>MOT</label>
                                            @Html.TextBoxFor(m => m.MOT, new { @class = "form-control", id = "MOT", @readonly = "readonly" })
                                        </div> 
                                        <div>
                                            <label>Description:</label>
                                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", placeholder = "Product Discription", @readonly = "readonly" })

                                        </div>
                                        <div>
                                            <label>Theam:</label>
                                            @Html.TextBoxFor(m => m.Theme, new { @class = "form-control", placeholder = "Theam", @readonly = "readonly" })
                                        </div>
                                        <div>
                                            <label>K.P.I:</label>
                                            @Html.TextBoxFor(m => m.KPI, new { @class = "form-control", placeholder = "Enter K.P.I", @readonly = "readonly" })

                                        </div>
                          
                                        <div>
                                            <label>NeededBy:</label>
                                            @Html.TextBoxFor(m => m.NeedByDate, new { type = "text", @class = "date-picker form-control", id = "needbydate", @readonly = "readonly" })
                                        </div>

                                        <div>
                                            <label>Charge Code:</label>
                                            @Html.TextBoxFor(m => m.Chargecode, new { @class = "form-control", @readonly = "readonly" })
                                        </div>
                                        <div>
                                            <label>Status:</label>
                                            @Html.DropDownListFor(m => m.Status, (from Status e in Enum.GetValues(typeof(Status)) select new SelectListItem { Value = e.ToString(), Text = e.ToString() }), "--Select--", new { @class = "form-control" })<br />
                                        </div>
                                            if (usertype == "Requisitioner")
                                            {
                                        <div>
                                            <label>Recevied By:</label>
                                            @Html.DropDownListFor(m => m.RecevedBy, new SelectList(db.Users, "ID", "UserType"), "--Select--", new { @class = "form-control", id = "Status" })<br />
                                        </div>
                                            }
                                        <div style="float: left; margin-left: 100px">
                                            <label>Call-Off: </label>
                                            @Html.CheckBoxFor(m => m.Calloff, new { @readonly = "readonly" })<br />
                                            <br />
                                            @*<label>Call-Local:</label>
                                            @Html.CheckBoxFor(m => m.Local, new { @disabled = "disabled" })*@
                                        </div>
                                        <div style="margin-left: 500px">
                                            <label>LeadTime:</label>
                                            @Html.TextBoxFor(m => m.LeadTime, new { id = "LeadTime", @readonly = "readonly" })<br />
                                            <br />
                                            <label>DueDate:</label>
                                            @Html.TextBoxFor(m => m.DueDate, new { type = "text", @class = "date-picker", id = "DueDate", @readonly = "readonly" })
                                        </div>
                                      
                                        <div class="portlet box purple">
                                            <div class="portlet-title">
                                                <div class="caption">
                                                    <i class="fa fa-cogs"></i>Add Items
                                                </div>
                                                <div class="tools">
                                                    <a href="javascript:;" class="collapse" data-original-title="" title=""></a>
                                                    <a href="javascript:;" class="reload" data-original-title="" title=""></a>
                                                </div>
                                            </div>
                                            <div class="portlet-body">
                                                <div class="table-responsive">
                                                    <table id="myTable" class="table">
                                                        <thead>
                                                        </thead>
                                                        <tr>
                                                            <th>#</th>
                                                            <th>Product</th>
                                                            <th>Total Quantity</th>
                                                            <th>QuntOrdered</th>
                                                            <th>QuntShipped</th>
                                                            <th>QuntLeft</th>
                                                            <th>UnitValue</th>
                                                            <th>AdditionalCost</th>
                                                            <th>Call Off Date</th>
                                                            <th>TotalValue</th>


                                                        </tr>
                                                        @foreach (var i in item)
                                                        {
                                                            var itemname = db.tblItem.Where(x => x.Id == i.ItemId).Select(x => x.ItemName).FirstOrDefault();
                                                            <tr>
                                                                <td>@i.tblStockId @Html.Hidden("SId", i.tblStockId)</td>
                                                                <td>
                                                                    <input type="text" id="txtitemname" size="10" disabled="disabled" value=" @itemname" name="txtitemname" class="ItemName" readonly="true"/>
                                                                    @Html.Hidden("ItemId", i.ItemId)
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="txtTotalQuantity" size="10" name="txtTotalQuantity"  value="@i.TotalQty" class="totalquantity"  readonly="true"  />
                                                                </td>
                                                                <td>
                                                                <input type="text" id="txtQuntOrdered" size="10" disabled="disabled" value=" @i.QuntOrdered " name=" txtquntordered" class="QuntOrdered" readonly="true" />

                                                                </td>
                                                                @if (usertype == "Supplier")
                                                                {
                                                                    <td>
                                                                        <input type="text" id="txtQuntShipped1" size="10"  name="txtQuntShipped" value="@i.QuntShipped" class="QuntShipped"/>
                                                                    </td>
                                                                }
                                                                else
                                                                {
                                                                    <td>
                                                                        <input type="text" id="txtQuntShipped2" size="10"  name="txtQuntShipped" value="@i.QuntShipped" class="QuntShipped"  readonly="true"   />
                                                                    </td>
                                                                }
                                                                <td>
                                                                    <input type="text" id="txtQuntLeft" size="10" disabled="disabled" name="txtQuntLeft" value="@i.QuntLeft" class="QuntLeft" readonly="true"  />
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="txtUnitValue" size="10" disabled="disabled" name="txtUnitValue" value="@i.UnitValue" class="UnitValue" readonly="true"  />
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="txtAdditionalCost" size="10" disabled="disabled" name="txtAdditionalCost" value="@i.AdditionalCost" class="AdditionalCost"  readonly="true"  />
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="CallOffDate" size="10" name="CallOffDate" class="CallOffDate date-picker"  value="@i.CallOffDate"  readonly="true" />
                                                                </td>
                                                                <td>
                                                                    <input type="text" id="txtTotalValue" size="10" disabled="disabled" value="@i.TotalValue" name="txtTotalValue" class="TotalValue" readonly="true"    />
                                                                </td>


                                                            </tr>
                                                        }
                                                        <tfoot>
                                                        </tfoot>

                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                        
                                                        if (usertype == "Consolidator")
                                                        {
                                        <div>
                                            <label>Volume/Kg</label>
                                            @Html.TextBoxFor(m => m.Volume, new { @class = "Volume form-control", id = "Volume" })
                                        </div>
                                        <div>
                                            <label>FreightCost</label>
                                            @Html.TextBoxFor(m => m.FreightCost, new { @class = "Cost form-control", id = "Cost" })
                                        </div>
                                        <div>
                                                <label>Destination Charges</label>
                                                @Html.TextBoxFor(m => m.DestinationCharges, new { @class = "DestinationCharges form-control", id = "DestinationCharges" })
                                            </div>
                                            <div>
                                                <label>Ecowas Charges</label>
                                                @Html.TextBoxFor(m => m.EcowasCharges, new { @class = "EcowasCharges form-control", id = "EcowasCharges" })
                                            </div>
                                            <div>
                                            <label>Grand total</label>
                                            @Html.TextBoxFor(m => m.Grandtotal, null, new { @class = "Grandtotal form-control", id = "Grandtotal", @readonly = "readonly" })
                                        </div>
                                                        }
                                                        else
                                                        {
                                        <div>
                                            <label>Volume/Kg</label>
                                            @Html.TextBoxFor(m => m.Volume, new { @class = "Volume form-control", id = "Volume", @readonly = "readonly" })
                                        </div>
                                        <div>
                                            <label>FreightCost</label>
                                            @Html.TextBoxFor(m => m.FreightCost, new { @class = "Cost form-control", id = "Cost", @readonly = "readonly" })
                                        </div>
                                        <div>
                                            <label>Grand total</label>
                                            @Html.TextBoxFor(m => m.Grandtotal, null, new { @class = "Grandtotal form-control", id = "Grandtotal", @readonly = "readonly" })
                                        </div>
                                                        }
                                        <br />
                                        <div class="actions" style="float: right">
                                            <input type="submit" class="btn green" id="submit" value="Submit" />
                                        </div>
                                        <div class="actions">
                                            <a href="../../Order/ViewPO" class="btn red">
                                                <span class="hidden-480">Back</span>
                                            </a>
                                        </div>
                                    }

                                </div>



                            </div>

                        </div>
                    </div>
                </div>

            </div>

        </div>
    </div>
    <script src="@Url.Content("~/Chosen/chosen.jquery.js")" type="text/javascript"></script>
    <link href="@Url.Content("~/Chosen/chosen.css")" rel="stylesheet"  type="text/css" />
   
    <script type="text/javascript">
        $(document).ready(function () {
            var ctr = 1;
            var sum = 0;
            $(".Volume, .Cost, .DestinationCharges, .EcowasCharges").live("change", function () {
                var Item_Volume = parseInt(($(this).parents("div").find(".Volume").val()));
                var unit_price = parseInt(($(this).parents("div").find(".Cost").val()));
                var destination_price = parseInt(($(this).parents("div").find(".DestinationCharges").val()));
                var ecowas_price = parseInt(($(this).parents("div").find(".EcowasCharges").val()));
                var total_value = parseInt((unit_price * (Item_Volume + destination_price + ecowas_price)).toFixed(2));
                if (!isNaN(total_value))
                    $(this).parents("div").find(".Grandtotal").val(total_value);
                $(this).parents("div").find(".Grandtotal").each(function () {
                    if (!isNaN(this.value) && this.value.length != 0) {
                        sum += parseFloat(this.value);
                    }
                });
            });
        });

    </script>
    <script>
        $(document).ready(function () {
            $(".QuntOrdered, .QuntShipped").live("change", function () {
                var sum = 0;
                var item_quantity = parseInt($(this).parents("tr").find(".QuntOrdered").val());
                var unit_price = parseInt($(this).parents("tr").find(".QuntShipped").val());
                var total_value = item_quantity - unit_price;
                console.info(item_quantity, unit_price, total_value);
                if (!isNaN(total_value))
                    $(this).parents("tr").find(".QuntLeft").val(total_value);
                $(this).parents("tr").find(".QuntLeft").each(function () {
                    if (!isNaN(this.value) && this.value.length != 0) {
                        sum += parseFloat(this.value);
                    }
                });
                $("#sum").html(sum.toFixed(2));


                var item_QuntShipped = parseInt($(this).parents("tr").find(".QuntShipped").val());
                var Unitvalue = parseFloat($(this).parents("tr").find(".UnitValue").val());
                var AdditionalCast = parseFloat($(this).parents("tr").find(".AdditionalCost").val());
                var TotalPrice = ((item_QuntShipped * Unitvalue) + (AdditionalCast)).toFixed(2);
                console.info(item_QuntShipped, Unitvalue, AdditionalCast, TotalPrice);
                if (!isNaN(TotalPrice))
                    $(this).parents("tr").find(".TotalValue").val(TotalPrice);
            });
        });
    </script>
    <script type="text/javascript">
        $(document).ready(function () {
            var ctr = 1;
            var sum = 0;
            $(".QuntShipped, .UnitValue,.AdditionalCost").live("change", function () {
                var item_QuntShipped = parseInt($(this).parents("tr").find(".QuntShipped").val());
                var Unitvalue = parseFloat($(this).parents("tr").find(".UnitValue").val());
                var AdditionalCast = parseFloat($(this).parents("tr").find(".AdditionalCost").val());
                var TotalPrice = ((item_quantityleft * Unitvalue) + (AdditionalCast));
                console.info(item_QuntShipped, Unitvalue, AdditionalCast, TotalPrice);
                if (!isNaN(TotalPrice))
                    $(this).parents("tr").find(".TotalValue").val(TotalPrice);
                $(this).parents("tr").find(".TotalValue").each(function () {
                    if (!isNaN(this.value) && this.value.length != 0) {
                        sum += parseFloat(this.value).toFixed(2);
                    }
                });
                $("#sum").html(sum.toFixed(2));

            });
            $(this).parents("tr").find(".TotalValue").each(function () {

            });



        });
    </script>
</body>

